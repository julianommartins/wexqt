package com.ibm.services.tools.wexws.customfacets;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public enum AvailableWithinFacetBucket {
	TODAY(0,"Today"),
	LESS_THAN_7_DAYS(604800,"7 days"),
	LESS_THAN_14_DAYS(1209600,"14 days"),
	LESS_THAN_21_DAYS(1814400,"21 days"),
	LESS_THAN_30_DAYS(2592000,"30 days"),
	LESS_THAN_60_DAYS(5184000,"60 days"),
	LESS_THAN_90_DAYS(7776000,"90 days"),
	MORE_THAN_90_DAYS(7776000,"> 90 days"),
	NO_AVAIL_DATE(-1,"No Availability Date"),
	;
	
	private final int bucketInSeconds;
	private final String label;
	private static Pattern bucketNameDetectorPattern = Pattern.compile(".*-(.*)");
	
	AvailableWithinFacetBucket(int bucketInSeconds,String label) {
		this.bucketInSeconds = bucketInSeconds;
		this.label = label;
	}

	public int getBucketInSeconds() {
		return bucketInSeconds;
	}

	public String getLabel() {
		return label;
	}
	
	public String getNativeFacetName(String prefix) {
		return prefix + "-" + toString();
	}
	
	public static AvailableWithinFacetBucket fromNativeFacetName(String nativeFacetName) {
		if (nativeFacetName == null) {
			throw new NullPointerException("nativeFacetName shouldn't be null");
		}
		Matcher matcher = bucketNameDetectorPattern.matcher(nativeFacetName);
		if (matcher.matches()) {
			return AvailableWithinFacetBucket.valueOf(matcher.group(1));
		} else {
			throw new IllegalArgumentException("not a facet name generated by AvailableWithinFacetBucket.getNativeFacetName");
		}
	}
}
